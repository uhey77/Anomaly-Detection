import os
from dotenv import load_dotenv
import requests
import json
from typing import Dict, List, Optional, Union

# .envファイルから環境変数をロード
load_dotenv()

class OpenAIClient:
    """OpenAI API用クライアント"""
    
    def __init__(self, api_key=None, model=None):
        """
        OpenAIクライアントを初期化
        
        Args:
            api_key (str, optional): OpenAI APIキー
            model (str, optional): 使用するモデル
        """
        self.api_key = api_key or os.getenv("OPENAI_API_KEY")
        if not self.api_key:
            raise ValueError("OpenAI APIキーが必要です")
        
        self.model = model or os.getenv("OPENAI_MODEL", "gpt-3.5-turbo")
        self.api_url = "https://api.openai.com/v1/chat/completions"
        
    def generate(self, prompt, max_tokens=1000, temperature=0.5):
        """
        OpenAI APIでテキストを生成
        
        Args:
            prompt (str): 入力プロンプト
            max_tokens (int, optional): 生成する最大トークン数
            temperature (float, optional): サンプリング温度
            
        Returns:
            str: 生成されたテキスト
        """
        headers = {
            "Content-Type": "application/json",
            "Authorization": f"Bearer {self.api_key}"
        }
        
        data = {
            "model": self.model,
            "messages": [{"role": "user", "content": prompt}],
            "max_tokens": max_tokens,
            "temperature": temperature
        }
        
        response = requests.post(self.api_url, headers=headers, data=json.dumps(data))
        
        if response.status_code == 200:
            result = response.json()
            return result["choices"][0]["message"]["content"]
        else:
            error_msg = f"エラー {response.status_code}: {response.text}"
            print(error_msg)
            return f"APIエラー: {error_msg}"


class HuggingFaceClient:
    """Hugging Face推論API用クライアント"""
    
    def __init__(self, api_key=None, model=None):
        """
        Hugging Faceクライアントを初期化
        
        Args:
            api_key (str, optional): Hugging Face APIキー
            model (str, optional): 使用するモデル
        """
        self.api_key = api_key or os.getenv("HF_API_KEY")
        if not self.api_key:
            raise ValueError("Hugging Face APIキーが必要です")
        
        self.model = model or os.getenv("HF_MODEL", "mistral/mistral-7b-instruct-v0.2")
        self.api_url = f"https://api-inference.huggingface.co/models/{self.model}"
        
    def generate(self, prompt, max_tokens=1000, temperature=0.5):
        """
        Hugging Face APIでテキストを生成
        
        Args:
            prompt (str): 入力プロンプト
            max_tokens (int, optional): 生成する最大トークン数
            temperature (float, optional): サンプリング温度
            
        Returns:
            str: 生成されたテキスト
        """
        headers = {
            "Authorization": f"Bearer {self.api_key}"
        }
        
        data = {
            "inputs": prompt,
            "parameters": {
                "max_new_tokens": max_tokens,
                "temperature": temperature,
                "do_sample": temperature > 0,
            }
        }
        
        response = requests.post(self.api_url, headers=headers, json=data)
        
        if response.status_code == 200:
            result = response.json()
            if isinstance(result, list) and len(result) > 0:
                return result[0].get("generated_text", "").replace(prompt, "").strip()
            else:
                return str(result)
        else:
            error_msg = f"エラー {response.status_code}: {response.text}"
            print(error_msg)
            return f"APIエラー: {error_msg}"


class MockLLMClient:
    """APIコールなしでテスト用のモックLLMクライアント"""
    
    def __init__(self):
        """モックLLMクライアントを初期化"""
        pass
        
    def generate(self, prompt, max_tokens=1000, temperature=0.5):
        """
        モックレスポンスでテキストを生成
        
        Args:
            prompt (str): 入力プロンプト
            max_tokens (int, optional): 生成する最大トークン数
            temperature (float, optional): サンプリング温度
            
        Returns:
            str: 生成されたテキスト
        """
        # プロンプトのキーワードに基づいてモックレスポンスを返す
        if "1987-10-19" in prompt and "Web検索" in prompt:
            return """
            検索結果に基づくと、1987年10月19日の株式市場の異常は有名な「ブラックマンデー」の暴落によるものでした。これはS&P 500が1日で22.6%下落した深刻な世界的株式市場の暴落でした。この暴落は、プログラム取引、市場心理、過大評価、市場の流動性不足など複数の要因が組み合わさって引き起こされました。これは歴史上最も重要な1日の市場下落の一つであり、サーキットブレーカーなど様々な市場改革につながりました。
            """
        elif "1987-10-19" in prompt and "金融市場の専門家" in prompt:
            return """
            歴史的コンテキスト：1987年10月19日は「ブラックマンデー」として知られており、歴史上最も重要な市場暴落の一つです。S&P 500は1日で約20.5%下落し、これは前例のないものでした。
            
            典型的な市場行動：この動きは非常に稀です。S&P 500の歴史において、5%以上の日次変動は1%未満の頻度でしか発生せず、20%以上の変動は単発的な出来事とされています。
            
            潜在的原因：この暴落は一般的に以下の要因の組み合わせによるものとされています：売りの連鎖反応を引き起こしたポートフォリオ保険戦略、同時に大量の売り注文を実行するコンピュータ化された取引プログラム、強い強気相場後の過大評価への懸念、流動性が迅速に入ってくるのを妨げた市場構造上の問題。
            
            類似の先例：比較可能なイベントはほとんどありません。1929年の暴落は同様のパーセンテージの下落が見られましたが、複数日にわたって分散していました。2008年の金融危機や2020年のCOVID-19パンデミックによる暴落も激しいものでしたが、下落率はいくぶん小さいものでした。
            """
        elif "1987-10-19" in prompt and "クロスチェック" in prompt:
            return """
            このクロスチェックデータに基づくと、1987年10月19日の異常は明らかに複数の指標によって確認されています（カテゴリー1）。ダウ工業株30種平均がS&P 500と同様に22.6%下落し、NASDAQも11.4%下落しています。さらに、債券市場も市場ストレスを示しており、VIX相当の指標も大幅に上昇しています。
            
            これらの指標は全て同じ方向に動いており、これが単なるS&P 500に限定されたものではなく、市場全体に影響する重大なシステミックイベントであったことを示しています。このような複数の指標にわたる確認は、データ誤りやS&P 500に特有の問題ではないことを示しています。
            
            また、債券市場とVIXの動きは典型的な「リスクオフ」パターンを示しており、投資家が安全資産へと資金を移動させていたことが示唆されています。これはパニック売りを伴う市場広範なシステムショックと一致しています。
            
            結論: これは明確に市場全体の異常であり、複数の関連指標によって強く確認されています。
            """
        elif "1987-10-19" in prompt and "統合" in prompt:
            return """
            # S&P 500市場異常分析: 1987年10月19日

            ## 異常要約
            1987年10月19日、S&P 500は前例のない22.6%の暴落を記録しました。この「ブラックマンデー」として知られるイベントは、株式市場の歴史において最も重要な1日の下落の一つであり、世界的な金融ショックを引き起こしました。この異常は他のすべての市場指標（ダウ工業株30種平均、NASDAQ、VIX相当指標）でも確認されており、システミックな市場イベントとして特徴付けられます。

            ## 原因説明
            この市場暴落は複数の要因が重なったことで発生しました：
            1. ポートフォリオ保険戦略が連鎖的な売りを引き起こした
            2. コンピュータ化されたプログラム取引が同時に大量の売り注文を実行した
            3. 過大評価への懸念が高まっていた（強い強気相場の後）
            4. 流動性の問題により市場の適切な機能が妨げられた
            5. 市場参加者間のパニック心理が拡大した

            ## 信頼度評価
            説明の信頼度: 高
            すべての情報源（Web情報、市場知識、クロスチェックデータ）が一貫してこの異常を確認しており、その原因について類似の説明を提供しています。これは広く研究され文書化された歴史的イベントであり、その解釈は金融界で一般的に受け入れられています。

            ## 情報源間の不一致
            顕著な不一致はありません。すべての情報源がこれを重大な市場異常として認識しており、その深刻さと原因についても合意しています。下落率については若干の数値の違い（20.5%対22.6%）がありますが、これは情報源やインデックス計算の違いによるものかもしれません。

            ## 推奨される調査
            このイベントはよく研究されているため、さらなる調査は特に必要ありませんが、次のような点について検討する価値があるかもしれません：
            1. このイベント後に導入された市場サーキットブレーカーやその他の改革の効果
            2. 現代の市場構造や取引技術でこのような異常が再発する可能性
            3. このイベントと将来の市場ショックとの比較分析
            """
        elif "1987-10-19" in prompt and "最終評価" in prompt:
            return """
            # 市場異常分析: 1987年10月19日（ブラックマンデー）

            ## エグゼクティブサマリー
            1987年10月19日、S&P 500は単一取引日で22.6%という前例のない暴落を記録しました。「ブラックマンデー」として知られるこの歴史的イベントは、主にポートフォリオ保険戦略とプログラム取引の相互作用、市場流動性の問題、そして投資家心理の急速な悪化により引き起こされました。

            ## 妥当性評価: 高信頼度
            複数の信頼できる情報源とすべての市場指標がこの異常を確認しており、これは明らかに真の市場イベントであって、データエラーではありません。この日のデータは広範に検証されており、金融史上最も研究された市場イベントの一つです。

            ## 重要性評価: 重大
            このイベントの重要性は「重大」と評価されます。それは：
            - 単一日の最大の市場下落率の一つとして記録されている
            - グローバルな金融危機を引き起こした
            - 市場サーキットブレーカーや取引制限などの重要な規制改革につながった
            - リスク管理、ポートフォリオ保険、プログラム取引への根本的な再考を促した
            - 現代の金融市場設計に持続的な影響を与えた

            ## 行動推奨
            歴史的イベントとして、これは過去のものですが、リスク管理の視点から次のような行動が有効です：
            1. この市場崩壊が現代の状況にどのように関連するかを検討する比較分析の実施
            2. 自動取引アルゴリズムの潜在的な連鎖反応に関する現在のシステミックリスクの評価
            3. 現在の市場サーキットブレーカー設計の有効性レビュー
            4. 極端な市場ストレス時の流動性枯渇に対するレジリエンスのテスト

            ## 学習ポイント
            将来の市場監視のための主な教訓：
            1. 自動化された取引システムの相互作用が複雑な連鎖反応を引き起こす可能性がある
            2. リスク管理戦略が集団で実行されると、それらが軽減しようとしているリスクをむしろ悪化させる可能性がある
            3. 極端な市場変動時には流動性が突然消失する可能性がある
            4. 市場参加者の行動の相互依存性が極端な市場条件下で予期せぬ結果を生む可能性がある
            5. 適切な安全装置はシステミックショックの影響を緩和できる
            """
        elif "2008-10-13" in prompt:
            return """
            2008年10月13日の市場反発はグローバル金融危機の中での重要なイベントでした。この日にS&P 500は約11.8%上昇しました。これは主に、世界中の政府と中央銀行が大規模な銀行救済策と支援計画を発表したことに対する市場の反応でした。特に、欧州各国政府は大規模な銀行救済計画を発表し、米国も銀行システムにおける公的資本注入計画を明らかにしました。VIXの急激な低下と他の主要指数の同様の上昇は、これが投資家の信頼回復を示すグローバルな事象であったことを確認しています。この反発は、市場参加者が一斉にリスク資産への回帰を行ったことを示すものであり、流動性注入と政府支援への強い期待を反映していました。
            """
        elif "2020-03-16" in prompt:
            return """
            2020年3月16日のS&P 500の急落は、COVID-19パンデミックによる市場反応の一部でした。約12%の下落は、パンデミックの急速な拡大、封鎖措置の実施、経済活動の突然の停止に対する不確実性と恐怖を反映しています。興味深いことに、この下落は連邦準備制度理事会が緊急利下げとQE（量的緩和）プログラムを発表した直後に起きました。これらの政策介入は安心感を提供する代わりに、危機の深刻さを強調して市場不安を高めたようです。他の市場指標も同様にネガティブであり、VIXは過去最高値を記録し、極度の恐怖を示しました。この市場反応は非常に異例なものでしたが、1987年のブラックマンデーほどではありませんでした。外部のショック（パンデミック）から生じたこの市場イベントは、システムの内部矛盾から生じた以前の危機とは異なる特性を示しています。
            """
        elif "統合レポート" in prompt:
            # 未知の日付に対する一般的な応答
            return """
            # 市場異常分析レポート

            ## 異常要約
            分析された日付において、S&P 500は統計的に有意な変動を示しました。このような水準の価格変動は、通常の市場条件下では稀であり、特定の市場イベントまたはマクロ経済要因によって引き起こされた可能性があります。

            ## 原因説明
            利用可能な情報からは、この市場動向の明確な原因を特定するのに十分ではありません。可能性のある要因としては：
            1. マクロ経済データの発表
            2. 政策変更や中央銀行の行動
            3. 地政学的イベント
            4. セクター特有のニュース
            5. 大口投資家の活動

            ## 信頼度評価
            説明の信頼度: 低
            現在利用可能な情報だけでは、この異常の確かな原因を特定することはできません。より詳細な分析には追加データが必要です。

            ## 情報源間の不一致
            情報源間に明確な不一致はありませんが、これは主に詳細情報の欠如によるものかもしれません。クロスチェックデータは他の市場指標も同様の動きを示していることを示唆していますが、根本的な原因については十分な洞察を提供していません。

            ## 推奨される調査
            この異常をより良く理解するために、以下の追加調査が推奨されます：
            1. その日の主要な経済発表の確認
            2. その期間の業界ニュースや企業発表のレビュー
            3. 類似の過去の市場動向との比較分析
            4. 同日の取引量と流動性メトリクスの分析
            5. 関連する派生商品市場におけるポジショニングの評価
            """
        else:
            # 未知のプロンプトに対する一般的な応答
            return """
            提供された情報に基づくと、この日付における市場異常の根本的な原因を確実に特定するには情報が不足しています。このような変動の一般的な要因として考えられるのは、重要な経済データの発表、中央銀行の政策変更、地政学的イベント、セクター特有のニュース、または市場構造の問題などがあります。

            このイベントをより良く理解するには、次のような追加情報が必要でしょう：
            1. その日の主要なニュースヘッドラインや経済発表
            2. セクターまたは業界固有の動き
            3. 同時期の他の関連市場指標（債券、通貨、商品など）
            4. その日の取引ボリュームや流動性メトリクス
            5. 市場心理または投資家センチメントデータ
            
            現時点では、信頼度の高い分析を提供するために十分な情報がありません。この市場変動の詳細な調査が推奨されます。
            """
